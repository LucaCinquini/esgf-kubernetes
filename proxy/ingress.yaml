apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/ssl-passthrough: "true"
    ingress.kubernetes.io/report-node-internal-ip-address: "true"
    # Enable client certificate authentication
    #ingress.kubernetes.io/auth-tls-verify-client: "on"
    # Create the secret containing the trusted ca certificates with `kubectl create secret generic auth-tls-chain --from-file=ca.crt --namespace=default`
    #ingress.kubernetes.io/auth-tls-secret: "default/auth-tls-chain"
    # Specify the verification depth in the client certificates chain
    #ingress.kubernetes.io/auth-tls-verify-depth: "1"
    # Specify an error page to be redirected to on verification errors
    #ingress.kubernetes.io/auth-tls-error-page: "http://www.mysite.com/error-cert.html"
    # Specify if certificates are be passed to upstream server
    #ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "false"
  name: esgf-ingress
  labels:
    stack: esgf
    component: proxy
spec:
  tls:
  # FIXME: minikube ip
  - hosts:
    - esgf.192.168.99.105.xip.io
    secretName: esgf-hostcert
  rules:
  - host: esgf.192.168.99.105.xip.io
    http:
      paths:
      - path: /thredds
        backend:
          serviceName: esgf-tds
          servicePort: 8080
      - path: /esgf-idp
        backend:
          serviceName: esgf-idp-node
          servicePort: 8080
      - path: /solr
        backend:
          serviceName: esgf-solr-slave
          servicePort: 8983
      - path: /esg-search
        backend:
          serviceName: esgf-index-node
          servicePort: 8080
      - path: /esg-orp
        backend:
          serviceName: esgf-orp
          servicePort: 8080
      - path: /esgf-auth
        backend:
          serviceName: esgf-auth
          servicePort: 8000
      - path: /esgf-slcs
        backend:
          serviceName: esgf-slcs
          servicePort: 8000
      - path: /
        backend:
          serviceName: esgf-cog
          servicePort: 8000
